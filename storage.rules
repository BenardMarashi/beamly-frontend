rules_version = '2';

// Allow read access on all files for development
// TODO: Restrict this in production
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isDocument() {
      return request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('application/msword') ||
             request.resource.contentType.matches('application/vnd.*') ||
             request.resource.contentType.matches('text/.*');
    }
    
    function isValidSize() {
      // Max 10MB for all files (documents and images)
      return request.resource.size < 10 * 1024 * 1024;
    }
    
    // ===== PROPOSALS ATTACHMENTS - ADD THIS SECTION =====
    match /proposals/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidSize();
      allow delete: if isOwner(userId);
    }
    
    match /proposals/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidSize();
      allow delete: if isOwner(userId);
    }
    // ===== END PROPOSALS SECTION =====
    
    // ===== PROFILE PHOTOS =====
    match /profile-photos/{userId}/{fileName} {
      allow read: if true; // Public profile images
      allow write: if isOwner(userId) && isImage() && isValidSize();
      allow delete: if isOwner(userId);
    }
    
    match /profile-photos/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId) && isImage() && isValidSize();
      allow delete: if isOwner(userId);
    }
    
    // User profile images (alternative path)
    match /users/{userId}/profile/{fileName} {
      allow read: if true; // Public profile images
      allow write: if isOwner(userId) && isImage() && isValidSize();
      allow delete: if isOwner(userId);
    }
    
    // User documents (portfolios, resumes, etc.)
    match /users/{userId}/documents/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isDocument() && isValidSize();
      allow delete: if isOwner(userId);
    }
    
    // Job attachments
    match /jobs/{jobId}/attachments/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidSize();
      allow delete: if isAuthenticated();
    }
    
    // Proposal attachments (alternative path)
    match /proposal-attachments/{proposalId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidSize();
      allow delete: if isAuthenticated();
    }
    
    // Contract files
    match /contracts/{contractId}/files/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidSize();
      allow delete: if isAuthenticated();
    }
    
    // Chat attachments
    match /conversations/{conversationId}/attachments/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isImage() && isValidSize();
      allow delete: if isAuthenticated();
    }
    
    // Company logos
    match /companies/{companyId}/logo/{fileName} {
      allow read: if true; // Public company logos
      allow write: if isAuthenticated() && isImage() && isValidSize();
      allow delete: if isAuthenticated();
    }
    
    // Project images
    match /projects/{userId}/{projectId}/{fileName} {
      allow read: if true; // Public project images
      allow write: if isOwner(userId) && isImage() && isValidSize();
      allow delete: if isOwner(userId);
    }
    
    match /projects/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId) && isImage() && isValidSize();
      allow delete: if isOwner(userId);
    }
    
    // Temporary uploads (for forms, etc.)
    match /temp/{userId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && isValidSize();
      allow delete: if isOwner(userId);
    }
    
    // Deny all other access
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}