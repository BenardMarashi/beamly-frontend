rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if true; // Public profiles
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false;
    }
    
    // Jobs collection
    match /jobs/{jobId} {
      allow read: if true;
      allow create: if isAuthenticated() && 
        request.resource.data.clientId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.clientId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.clientId == request.auth.uid;
    }
    
    // Proposals collection
    match /proposals/{proposalId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.freelancerId == request.auth.uid;
      allow update: if isAuthenticated() && 
        (resource.data.freelancerId == request.auth.uid || 
         resource.data.clientId == request.auth.uid);
      allow delete: if false;
    }
    
    // Conversations collection
    match /conversations/{conversationId} {
      // Allow any authenticated user to read conversations they're part of
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.auth.uid in request.resource.data.participants;
      allow update: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;
      allow delete: if false;
    }
    
    // Messages collection (top-level) - CRITICAL FIX
    match /messages/{messageId} {
      // Allow reading messages if user is authenticated
      // The app will filter by conversationId in the query
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.senderId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.recipientId == request.auth.uid;
      allow delete: if false;
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Projects collection
    match /projects/{projectId} {
      allow read: if true;
      allow create: if isAuthenticated() && 
        request.resource.data.freelancerId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.freelancerId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.freelancerId == request.auth.uid;
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated() && 
        request.resource.data.reviewerId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.reviewerId == request.auth.uid;
      allow delete: if false;
    }
    
    // Verifications collection
    match /verifications/{verificationId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow delete: if false;
    }

    // Analytics events collection
    match /analytics_events/{eventId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if false;
      allow delete: if false;
    }
    
    // Analytics collection
    match /analytics/{document=**} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if false;
      allow delete: if false;
    }
    
    // Contracts collection
    match /contracts/{contractId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if false;
    }
    
    // Payments collection
    match /payments/{paymentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if false;
      allow delete: if false;
    }
  }
}